root = true
[*]
end_of_line = crlf
insert_final_newline = true

# Code files
[*.{cs,cshtml,ts}]
indent_style = space
indent_size = 4

# Project files
[*.{csproj,props,yaml}]
indent_style = space
indent_size = 2

# IDE warnings
[*.cs]

csharp_style_inlined_variable_declaration = true:warning # IDE0018: Inline variable declaration
csharp_prefer_simple_default_expression = true:warning # IDE0034: Simplify 'default' expression
dotnet_style_prefer_compound_assignment = true:warning # IDE0054: Use compound assignment
csharp_style_unused_value_assignment_preference = discard_variable:warning # IDE0059: Unnecessary assignment of a value

dotnet_diagnostic.IDE1006.severity = none    # Naming Styles
dotnet_diagnostic.IDE0005.severity = warning # Using directive unnecessary
dotnet_diagnostic.IDE0079.severity = warning # Unnecessary suppression
dotnet_diagnostic.IDE0090.severity = warning # Simplify new expression

dotnet_diagnostic.CA1845.severity = none # Use span-based 'string.Concat'
dotnet_diagnostic.CA1846.severity = none # Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA2231.severity = none # Overload operator equals on overriding value type Equals

dotnet_diagnostic.CA1069.severity = warning # Enums values should not be duplicated
dotnet_diagnostic.CA1806.severity = warning # Do not ignore method results
dotnet_diagnostic.CA1816.severity = warning # Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1822.severity = warning # Member that does not access instance data can be marked as static
dotnet_diagnostic.CA1825.severity = warning # Avoid unnecessary zero-length array allocations
dotnet_diagnostic.CA1845.severity = warning # Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1847.severity = warning # Use char literal for a single character lookup
dotnet_diagnostic.CA2016.severity = warning # Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2211.severity = warning # Non-constant fields should not be visible
dotnet_diagnostic.CA2249.severity = warning # Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2254.severity = warning # Template should be a static expression
dotnet_diagnostic.CS8763.severity = warning # A method marked [DoesNotReturn] should not return.
dotnet_diagnostic.CS8770.severity = warning # Method lacks [DoesNotReturn] annotation to match implemented or overridden member.

dotnet_diagnostic.QW0001.severity = none    # Use a testable Time Provider
dotnet_diagnostic.QW0003.severity = warning # Decorate Pure functions

dotnet_diagnostic.SA1001.severity = none # Commas should not be preceded by whitespace
dotnet_diagnostic.SA1101.severity = none # Prefix local calls with this.
dotnet_diagnostic.SA1127.severity = none # Generic type constraints should be on their own line.
dotnet_diagnostic.SA1128.severity = none # Constructor initializes should be on their own line.
dotnet_diagnostic.SA1200.severity = none # using directive is placed outside of a namespace element.
dotnet_diagnostic.SA1201.severity = none # Order of different members.
dotnet_diagnostic.SA1202.severity = none # Sort members based on visibillity.
dotnet_diagnostic.SA1203.severity = none # Constants before non-constants.
dotnet_diagnostic.SA1204.severity = none # Sort members based on static/instance.
dotnet_diagnostic.SA1208.severity = none # System using directives must be placed before other using directives.
dotnet_diagnostic.SA1214.severity = none # Sort readonly fields before non-readonly fields.
dotnet_diagnostic.SA1300.severity = none # Enum members should not start with lower-case character.
dotnet_diagnostic.SA1304.severity = none # None-private fields should begin with upper-case character.
dotnet_diagnostic.SA1306.severity = none # Fields should begin with lower-case character.
dotnet_diagnostic.SA1307.severity = none # Fields should begin with upper-case character.
dotnet_diagnostic.SA1308.severity = none # Fields should begin with 'm_' prefix.
dotnet_diagnostic.SA1309.severity = none # Fields should begin with underscore.
dotnet_diagnostic.SA1310.severity = none # Fields should not contain underscores.
dotnet_diagnostic.SA1311.severity = none # Static read-only fields should begin with upper-case character.
dotnet_diagnostic.SA1503.severity = none # Braces should not be omitted.
dotnet_diagnostic.SA1513.severity = none # Closing brace should be followed by an empty line.
dotnet_diagnostic.SA1519.severity = none # Braces should not be omitted from multi-line childe statement.
dotnet_diagnostic.SA1520.severity = none # Use braces consistently.
dotnet_diagnostic.SA1600.severity = none # Elements should be documented.
dotnet_diagnostic.SA1601.severity = none # Partial elements should be documented.
dotnet_diagnostic.SA1602.severity = none # Enumerations should be documented.
dotnet_diagnostic.SA1611.severity = none # The documentation for parameter x is missing.
dotnet_diagnostic.SA1615.severity = none # The documentation return value.
dotnet_diagnostic.SA1618.severity = none # The documentation type parameter.
dotnet_diagnostic.SA1623.severity = none # The property's documentation summary text should begin with: 'Gets'.
dotnet_diagnostic.SA1633.severity = none # The file header is missing or not located at the top of the file.
dotnet_diagnostic.SA1636.severity = none # The file header should contain match copyright from settings.
dotnet_diagnostic.SA1637.severity = none # The file header should contain file name.
dotnet_diagnostic.SA1640.severity = none # The copyright tag should contain a non-empty company attribute.

dotnet_diagnostic.SA1401.severity = suggestion # Fields should be private.
dotnet_diagnostic.SA1402.severity = suggestion # File may only contain one type.
dotnet_diagnostic.SA1407.severity = suggestion # Arithmetic expressions should declare precedence.
dotnet_diagnostic.SA1501.severity = suggestion # Statement should not be on single line.
dotnet_diagnostic.SA1502.severity = suggestion # Element should not be on single line.
dotnet_diagnostic.SA1512.severity = suggestion # Single-line comment should be followed by blank line.
dotnet_diagnostic.SA1515.severity = suggestion # Single-line comment should be preceded by blank line.
dotnet_diagnostic.SA1649.severity = suggestion # File name should match first type name.

dotnet_diagnostic.S100.severity = none  # Properties should be named in PascalCase
dotnet_diagnostic.S101.severity = none  # Types should be named in PascalCase
dotnet_diagnostic.S2328.severity = none # GetHashCode() should not reference mutable fields
dotnet_diagnostic.S2178.severity = none # Short-circuit logic should be used in boolean contexts - '&' is used instead of && to accommodate expressions with nullable booleans too.
dotnet_diagnostic.S3376.severity = none # EventArgs, and Exception type names should end with the type being extended
dotnet_diagnostic.S3376.severity = none # Attribute, EventArgs, and Exception type names should end with the type being extended
dotnet_diagnostic.S4136.severity = none # Method overloads should be grouped together

dotnet_diagnostic.S1133.severity = suggestion # Deprecated code should be removed

dotnet_diagnostic.S107.severity = warning  # Methods should not have too many parameters
dotnet_diagnostic.S127.severity = warning  # Methods should not have too many parameters
dotnet_diagnostic.S134.severity = warning  # Control flow statements "if", "switch", "for", "foreach", "while", "do" and "try" should not be nested too deeply
dotnet_diagnostic.S138.severity = warning  # Functions should not have too many lines of code
dotnet_diagnostic.S1067.severity = warning # Expressions should not be too complex
dotnet_diagnostic.S1144.severity = warning # Unused private types or members should be removed
dotnet_diagnostic.S1172.severity = warning # Unused method parameters should be removed
dotnet_diagnostic.S1185.severity = warning # Overriding members should do more than simply call the same member in the base class
dotnet_diagnostic.S1227.severity = warning # break statements should not be used except for switch cases
dotnet_diagnostic.S1479.severity = warning # Consider reworking this 'switch' to reduce the number of 'case's to at most 30
dotnet_diagnostic.S1541.severity = warning # Methods and properties should not be too complex
dotnet_diagnostic.S1858.severity = warning # "ToString()" calls should not be redundant
dotnet_diagnostic.S1694.severity = warning # An abstract class should have both abstract and concrete methods
dotnet_diagnostic.S2197.severity = warning # Modulus results should not be checked for direct equa
dotnet_diagnostic.S2302.severity = warning # "nameof" should be used
dotnet_diagnostic.S2342.severity = warning # Rename this enumeration to match naming convention
dotnet_diagnostic.S2436.severity = warning # Types and methods should not have too many generic parameters
dotnet_diagnostic.S2701.severity = warning # Literal boolean values should not be used in assertions
dotnet_diagnostic.S3215.severity = warning # Interface instances should not be cast to concrete types
dotnet_diagnostic.S3218.severity = warning # Inner class members should not shadow outer class "static" or type members
dotnet_diagnostic.S3257.severity = warning # Declarations and initializations should be as concise as possible
dotnet_diagnostic.S3776.severity = warning # Cognitive Complexity of methods should not be too high
dotnet_diagnostic.S3925.severity = warning # "ISerializable" should be implemented correctly
dotnet_diagnostic.S3900.severity = warning # Arguments of public methods should be validated against null
dotnet_diagnostic.S6354.severity = warning # Use a testable (date) time provider instead
