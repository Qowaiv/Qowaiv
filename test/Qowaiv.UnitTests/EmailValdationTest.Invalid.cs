using NUnit.Framework;

namespace Qowaiv.UnitTests
{
    // Check: https://github.com/nunit/nunit3-vs-adapter/issues/622
    public partial class EmailValdationTest
    {
        [TestCase(null, "null")]
        [TestCase("", "String.Empty")]
        [TestCase("..@test.com", "Double dot local")]
        [TestCase(".a@test.com", "Starts with a dot")]
        [TestCase("ab@sd@dd", "Two @")]
        [TestCase(".@s.dd")]
        [TestCase("ends-with@")]
        [TestCase("domain.part.of1@a")]
        [TestCase("ab@988.120.150.10")]
        [TestCase("ab@120.256.256.120")]
        [TestCase("ab@120.25.1111.120")]
        [TestCase("ab@[188.120.150.10")]
        [TestCase("ab@188.120.150.10]")]
        [TestCase("ab@[188.120.150.10].com")]
        [TestCase("a@b.-de.cc")]
        [TestCase("a@bde-.cc")]
        [TestCase("a@bde.c-c")]
        [TestCase("a@bde.cc.")]
        [TestCase("ab@b+de.cc")]
        [TestCase("a..b@bde.cc")]
        [TestCase("_@bde.cc,")]
        [TestCase("plainaddress")]
        [TestCase("plain.address")]
        [TestCase("@%^%#$@#$@#.com")]
        [TestCase("@domain.com")]
        [TestCase("Joe Smith &lt;email@domain.com&gt;")]
        [TestCase("email.domain.com")]
        [TestCase("email@domain@domain.com")]
        [TestCase(".email@domain.com")]
        [TestCase("email.@domain.com")]
        [TestCase("email..email@domain.com")]
        [TestCase("email@-domain.com")]
        [TestCase("email@domain-.com")]
        [TestCase("email@domain.com-")]
        [TestCase("email@.domain.com")]
        [TestCase("email@domain.com.")]
        [TestCase("email@domain..com")]
        [TestCase("email@111.222.333")]
        [TestCase("email@111.222.333.256")]
        [TestCase("email@[123.123.123.123")]
        [TestCase("email@[123.123.123].123")]
        [TestCase("email@123.123.123.123]")]
        [TestCase("email@123.123.[123.123]")]
        [TestCase("ipv4.with.ipv6prefix.addr@[IPv6:123.1.72.10]")]
        [TestCase("email@{leftbracket.com")]
        [TestCase("email@rightbracket}.com")]
        [TestCase("email@p|pe.com")]
        [TestCase("isis@100%.nl")]
        [TestCase("email@dollar$.com")]
        [TestCase("email@r&amp;d.com")]
        [TestCase("email@#hash.com")]
        [TestCase("email@wave~tilde.com")]
        [TestCase("email@exclamation!mark.com")]
        [TestCase("email@question?mark.com")]
        [TestCase("email@obelix*asterisk.com")]
        [TestCase("email@grave`accent.com")]
        [TestCase("email@colon:colon.com")]
        [TestCase("email@caret^xor.com")]
        [TestCase("email@=qowaiv.com")]
        [TestCase("email@plus+.com")]
        [TestCase("email@domain.com>")]
        [TestCase("email( (nested) )@plus.com")]
        [TestCase("email)mirror(@plus.com")]
        [TestCase("email@plus.com (not closed comment")]
        [TestCase("email(with @ in comment)plus.com")]
        [TestCase(@"""Joe Smith email@domain.com")]
        [TestCase(@"""Joe Smith' email@domain.com")]
        [TestCase(@"""Joe Smith""email@domain.com")]
        [TestCase("email@mailto:domain.com")]
        [TestCase("mailto:mailto:email@domain.com")]
        [TestCase("Display Name <email@plus.com> (after name with display)")]
        [TestCase(@"""With extra  display name"" Display Name<email@domain.com>")]


        //// examples from https://github.com/Sembiance/email-validator
        [TestCase("@missing-local.org")]
        [TestCase("IP-and-port@127.0.0.1:25")]
        [TestCase("another-invalid-ip@127.0.0.256")]
        [TestCase("invalid")]
        [TestCase("invalid-ip@127.0.0.1.26")]
        [TestCase("local-ends-with-dot.@sld.com")]
        [TestCase("missing-at-sign.net")]
        [TestCase("missing-sld@.com")]
        [TestCase("missing-tld@sld.")]
        [TestCase("sld-ends-with-dash@sld-.com")]
        [TestCase("sld-starts-with-dashsh@-sld.com")]
        [TestCase("the-character-limit@for-each-part.of-the-domain.is-sixty-three-characters.this-is-exactly-sixty-four-characters-so-it-is-invalid-blah-blah.com")]
        [TestCase("the-local-part-is-invalid-if-it-is-longer-than-sixty-four-characters@sld.net")]
        [TestCase("the-total-length@of-an-entire-address.cannot-be-longer-than-two-hundred-and-fifty-four-characters.and-this-address-is-255-characters-exactly.so-it-should-be-invalid.and-im-going-to-add-some-more-words-here.to-increase-the-lenght-blah-blah-blah-blah-bl.org")]
        [TestCase("two..consecutive-dots@sld.com")]
        public void Invalid(string email, string message = null) => Assert.IsFalse(EmailAddress.IsValid(email), message);
   }
}
